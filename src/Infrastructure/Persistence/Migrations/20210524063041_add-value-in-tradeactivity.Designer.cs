// <auto-generated />
using System;
using GFCA.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GFCA.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210524063041_add-value-in-tradeactivity")]
    partial class addvalueintradeactivity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GFCA.Domain.Entities.Accountants.CostCenter", b =>
                {
                    b.Property<int>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CenterCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("CenterName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("Site")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int?>("SourceFundId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("CostCenterId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("SourceFundId");

                    b.ToTable("CostCenter","dbo");

                    b.HasData(
                        new
                        {
                            CostCenterId = 1,
                            CenterCode = "CC001",
                            CenterName = "Cost 001",
                            Site = "BKK Thailand"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Accountants.GLAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("GLCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int?>("GLGroupId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("GLName")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("Purpose")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("AccountId");

                    b.HasIndex("GLGroupId");

                    b.ToTable("GLAccount","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Accountants.GLGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("GroupPolicy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GroupId");

                    b.ToTable("GLGroup","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.BusinessParties.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasColumnType("varchar(150)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("CustomerCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("CustomerGroup")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("Distributor")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("ShortName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer","dbo");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            AccountNo = "D03",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2190),
                            CustomerCode = "11000046",
                            CustomerGroup = "BIG C",
                            CustomerName = "บริษัท บิ๊กซี ซูเปอร์เซ็นเตอร์จำกัด (มหาชน)",
                            Distributor = "AAI",
                            ShortName = "BIGC"
                        },
                        new
                        {
                            CustomerId = 2,
                            AccountNo = "D03",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2200),
                            CustomerCode = "D031-DM12",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-BIGC"
                        },
                        new
                        {
                            CustomerId = 3,
                            AccountNo = "D07",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2200),
                            CustomerCode = "11000055",
                            CustomerGroup = "TOPS",
                            CustomerName = "บริษัท เซ็นทรัล ฟู้ด รีเทล จำกัดสาขาดีซี",
                            Distributor = "AAI",
                            ShortName = "TOPS"
                        },
                        new
                        {
                            CustomerId = 4,
                            AccountNo = "D07",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2200),
                            CustomerCode = "D031-DM16",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-TOPS"
                        },
                        new
                        {
                            CustomerId = 5,
                            AccountNo = "D05",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2200),
                            CustomerCode = "11000059",
                            CustomerGroup = "TESCO LOTUS",
                            CustomerName = "บริษัท เอก-ชัย ดีสทริบิวชั่นซิสเทม จำกัด",
                            Distributor = "AAI",
                            ShortName = "TESCO"
                        },
                        new
                        {
                            CustomerId = 6,
                            AccountNo = "D05",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2200),
                            CustomerCode = "D031-DM14",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-TESCO"
                        },
                        new
                        {
                            CustomerId = 7,
                            AccountNo = "D04",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "11000066",
                            CustomerGroup = "FAMILY MART",
                            CustomerName = "บริษัท เซ็นทรัลแฟมิลี่มาร์ท จำกัด",
                            Distributor = "AAI",
                            ShortName = "FAMILYMART"
                        },
                        new
                        {
                            CustomerId = 8,
                            AccountNo = "D04",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM13",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-CFM"
                        },
                        new
                        {
                            CustomerId = 9,
                            AccountNo = "D08",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "11000081",
                            CustomerGroup = "VILLA",
                            CustomerName = "บริษัท วิลล่ามาร์เก็ท เจพี จำกัด",
                            Distributor = "AAI",
                            ShortName = "VILLA"
                        },
                        new
                        {
                            CustomerId = 10,
                            AccountNo = "D08",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM18",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-VILLA"
                        },
                        new
                        {
                            CustomerId = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "11000056",
                            CustomerGroup = "",
                            CustomerName = "บริษัท ซีพี ออลล์ จำกัด (มหาชน)",
                            Distributor = "AAI",
                            ShortName = "CPALL"
                        },
                        new
                        {
                            CustomerId = 12,
                            AccountNo = "D031-DM05",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM05",
                            CustomerName = "บริษัท ดีเคเอสเอช (ประเทศไทย) จำกัด",
                            Distributor = "DK",
                            ShortName = "DK-MAKRO"
                        },
                        new
                        {
                            CustomerId = 13,
                            AccountNo = "D031-DM09",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM09",
                            Distributor = "DK",
                            ShortName = "DK-TM"
                        },
                        new
                        {
                            CustomerId = 14,
                            AccountNo = "D031-DM01",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM01",
                            Distributor = "DK",
                            ShortName = "DK-BOOTS"
                        },
                        new
                        {
                            CustomerId = 15,
                            AccountNo = "D031-DM02",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2210),
                            CustomerCode = "D031-DM02",
                            Distributor = "DK",
                            ShortName = "DK-CPF"
                        },
                        new
                        {
                            CustomerId = 16,
                            AccountNo = "D031-DM03",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM03",
                            Distributor = "DK",
                            ShortName = "DK-FL"
                        },
                        new
                        {
                            CustomerId = 17,
                            AccountNo = "D031-DM04",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM04",
                            Distributor = "DK",
                            ShortName = "DK-ISETAN"
                        },
                        new
                        {
                            CustomerId = 18,
                            AccountNo = "D031-DM06",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM06",
                            Distributor = "DK",
                            ShortName = "DK-LAWSON"
                        },
                        new
                        {
                            CustomerId = 19,
                            AccountNo = "D031-DM08",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM08",
                            Distributor = "DK",
                            ShortName = "DK-THS"
                        },
                        new
                        {
                            CustomerId = 20,
                            AccountNo = "D031-DM10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM10",
                            Distributor = "DK",
                            ShortName = "DK-TOKYU"
                        },
                        new
                        {
                            CustomerId = 21,
                            AccountNo = "D031-DM11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM11",
                            Distributor = "DK",
                            ShortName = "DK-UFMFUJI"
                        },
                        new
                        {
                            CustomerId = 22,
                            AccountNo = "D031-DM17",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DM17",
                            Distributor = "DK",
                            ShortName = "DK-ALL-D"
                        },
                        new
                        {
                            CustomerId = 23,
                            AccountNo = "D031-DT02",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "D031-DT02",
                            Distributor = "DK",
                            ShortName = "DK-G STORE"
                        },
                        new
                        {
                            CustomerId = 24,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2220),
                            CustomerCode = "11000148",
                            CustomerName = "บริษัท ปิโตรเลียมไทยคอร์ปอเรชั่นจำกัด",
                            Distributor = "AAI",
                            ShortName = "PT GSTORE"
                        },
                        new
                        {
                            CustomerId = 25,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000150",
                            CustomerName = "บริษัท ปตท.บริหารธุรกิจค้าปลีกจำกัด",
                            Distributor = "AAI",
                            ShortName = "PTT JIFFY"
                        },
                        new
                        {
                            CustomerId = 26,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000151",
                            CustomerName = "บริษัท ซีพีเอฟ เทรดดิ้ง จำกัด",
                            Distributor = "AAI",
                            ShortName = "CPF"
                        },
                        new
                        {
                            CustomerId = 27,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000176",
                            CustomerName = "บริษัท สห ลอว์สัน จำกัด",
                            Distributor = "AAI",
                            ShortName = "LAWSON"
                        },
                        new
                        {
                            CustomerId = 28,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000181",
                            CustomerName = "บริษัท สรรพสินค้าตั้งฮั่วเส็ง จำกัด",
                            Distributor = "AAI",
                            ShortName = "THS BLP"
                        },
                        new
                        {
                            CustomerId = 29,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000180",
                            Distributor = "AAI",
                            ShortName = "THS TBR"
                        },
                        new
                        {
                            CustomerId = 30,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000152",
                            CustomerName = "บริษัท สยามแม็คโคร จำกัด (มหาชน)",
                            Distributor = "AAI",
                            ShortName = "MAKRO"
                        },
                        new
                        {
                            CustomerId = 31,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000203",
                            CustomerName = "บริษัท บู๊ทส์ รีเทล (ประเทศไทย)จำกัด",
                            Distributor = "AAI",
                            ShortName = "BOOTS"
                        },
                        new
                        {
                            CustomerId = 32,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000132",
                            CustomerName = "บริษัท ปตท. น้ำมันและการค้าปลิกจำกัด (มหาชน)",
                            Distributor = "AAI",
                            ShortName = "PTT OR"
                        },
                        new
                        {
                            CustomerId = 33,
                            AccountNo = "D09",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2230),
                            CustomerCode = "11000153",
                            CustomerGroup = "UFM FUJI",
                            CustomerName = "บริษัท ยูเอฟเอ็ม ฟูจิ ซูเปอร์ จำกัด",
                            Distributor = "AAI",
                            ShortName = "UFM FUJI1"
                        },
                        new
                        {
                            CustomerId = 34,
                            AccountNo = "D09",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000154",
                            Distributor = "AAI",
                            ShortName = "UFM FUJI2"
                        },
                        new
                        {
                            CustomerId = 35,
                            AccountNo = "D09",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000155",
                            Distributor = "AAI",
                            ShortName = "UFM FUJI4"
                        },
                        new
                        {
                            CustomerId = 36,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000158",
                            CustomerGroup = "FOOD LAND",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาเดอะไบร์ท พระราม2)",
                            Distributor = "AAI",
                            ShortName = "FL RAMAII"
                        },
                        new
                        {
                            CustomerId = 37,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000159",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาเพชรเกษม)",
                            Distributor = "AAI",
                            ShortName = "FL P KASEM"
                        },
                        new
                        {
                            CustomerId = 38,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000160",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาปิ่นเกล้า)",
                            Distributor = "AAI",
                            ShortName = "FL PINKLAO"
                        },
                        new
                        {
                            CustomerId = 39,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000161",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาพอร์โตชิโน่ พระราม2)",
                            Distributor = "AAI",
                            ShortName = "FL POTOCIN"
                        },
                        new
                        {
                            CustomerId = 40,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000163",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาสุขุมวิท ซอย16)",
                            Distributor = "AAI",
                            ShortName = "FL SKV S16"
                        },
                        new
                        {
                            CustomerId = 41,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000164",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาหลักสี่)",
                            Distributor = "AAI",
                            ShortName = "FL LAK4"
                        },
                        new
                        {
                            CustomerId = 42,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2240),
                            CustomerCode = "11000168",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาบางนา)",
                            Distributor = "AAI",
                            ShortName = "FL BANGNA"
                        },
                        new
                        {
                            CustomerId = 43,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000170",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาพระราม 3)",
                            Distributor = "AAI",
                            ShortName = "FL RAMAIII"
                        },
                        new
                        {
                            CustomerId = 44,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000178",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาพุทธมณฑล สาย4)",
                            Distributor = "AAI",
                            ShortName = "FL PTMT S4"
                        },
                        new
                        {
                            CustomerId = 45,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000157",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขารัชดา)",
                            Distributor = "AAI",
                            ShortName = "FL RATCADA"
                        },
                        new
                        {
                            CustomerId = 46,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000162",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาทองหล่อ)",
                            Distributor = "AAI",
                            ShortName = "FL THONGL"
                        },
                        new
                        {
                            CustomerId = 47,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000166",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาสุขุมวิท ซอย5)",
                            Distributor = "AAI",
                            ShortName = "FL SKV S5"
                        },
                        new
                        {
                            CustomerId = 48,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000167",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาหัวหมาก)",
                            Distributor = "AAI",
                            ShortName = "FL HUAMARK"
                        },
                        new
                        {
                            CustomerId = 49,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000169",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขารามอินทรา)",
                            Distributor = "AAI",
                            ShortName = "FL RAMINDA"
                        },
                        new
                        {
                            CustomerId = 50,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000179",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาศรีนครินทร์)",
                            Distributor = "AAI",
                            ShortName = "FL SRINAKA"
                        },
                        new
                        {
                            CustomerId = 51,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2250),
                            CustomerCode = "11000183",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาลาดพร้าว)",
                            Distributor = "AAI",
                            ShortName = "FL LADPRAO"
                        },
                        new
                        {
                            CustomerId = 52,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000165",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาจรัญสนิทวงศ์)",
                            Distributor = "AAI",
                            ShortName = "FL JRSNW"
                        },
                        new
                        {
                            CustomerId = 53,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000175",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาพัฒน์พงศ์)",
                            Distributor = "AAI",
                            ShortName = "FL PATPONG"
                        },
                        new
                        {
                            CustomerId = 54,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000173",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาพัทยากลาง)",
                            Distributor = "AAI",
                            ShortName = "FL PTYC"
                        },
                        new
                        {
                            CustomerId = 55,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000174",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาเพชรบุรี)",
                            Distributor = "AAI",
                            ShortName = "FL PBURI"
                        },
                        new
                        {
                            CustomerId = 56,
                            AccountNo = "D10",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000172",
                            CustomerName = "บริษัท ฟู้ดแลนด์ซุปเปอร์มาร์เก็ตจำกัด (สาขาเทอร์มินอลพัทยา)",
                            Distributor = "AAI",
                            ShortName = "FL TMNPAYA"
                        },
                        new
                        {
                            CustomerId = 57,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000187",
                            CustomerGroup = "THE MALL",
                            CustomerName = "บริษัท เดอะมอลล์ กรุ๊ป จำกัด",
                            Distributor = "AAI",
                            ShortName = "TM BKP"
                        },
                        new
                        {
                            CustomerId = 58,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000194",
                            Distributor = "AAI",
                            ShortName = "TM HUAMARK"
                        },
                        new
                        {
                            CustomerId = 59,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000197",
                            Distributor = "AAI",
                            ShortName = "TM NWW"
                        },
                        new
                        {
                            CustomerId = 60,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2260),
                            CustomerCode = "11000184",
                            Distributor = "AAI",
                            ShortName = "TM PEOPLEP"
                        },
                        new
                        {
                            CustomerId = 61,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000188",
                            Distributor = "AAI",
                            ShortName = "TM BKE"
                        },
                        new
                        {
                            CustomerId = 62,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000193",
                            Distributor = "AAI",
                            ShortName = "TM THAPRA"
                        },
                        new
                        {
                            CustomerId = 63,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000186",
                            Distributor = "AAI",
                            ShortName = "TM CDC RP"
                        },
                        new
                        {
                            CustomerId = 64,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000189",
                            Distributor = "AAI",
                            ShortName = "TM DV"
                        },
                        new
                        {
                            CustomerId = 65,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000199",
                            CustomerName = "บริษัท สยามพารากอน รีเทล จำกัด",
                            Distributor = "AAI",
                            ShortName = "PARAGON"
                        },
                        new
                        {
                            CustomerId = 66,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000196",
                            CustomerName = "บริษัท ซิตี้มอลล์ กรุ๊ป จำกัด",
                            Distributor = "AAI",
                            ShortName = "EMQUARTIER"
                        },
                        new
                        {
                            CustomerId = 67,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000202",
                            Distributor = "AAI",
                            ShortName = "EMPORIUM"
                        },
                        new
                        {
                            CustomerId = 68,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000198",
                            CustomerName = "บริษัท พรอมานาด โฮมเฟรซมาร์ทจำกัด",
                            Distributor = "AAI",
                            ShortName = "TM PROMNAD"
                        },
                        new
                        {
                            CustomerId = 69,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000192",
                            CustomerName = "บริษัท เดอะมอลล์ราชสีมา จำกัด",
                            Distributor = "AAI",
                            ShortName = "TM KORAT"
                        },
                        new
                        {
                            CustomerId = 70,
                            AccountNo = "D11",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2270),
                            CustomerCode = "11000195",
                            CustomerName = "บริษัท หัวหิน รีเทล จำกัด",
                            Distributor = "AAI",
                            ShortName = "TM BLUEPOR"
                        },
                        new
                        {
                            CustomerId = 71,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2280),
                            CustomerCode = "11000061",
                            CustomerName = "บริษัท ฟอร์ท เวนดิ้ง จำกัด",
                            Distributor = "AAI",
                            ShortName = "FORTH VEND"
                        },
                        new
                        {
                            CustomerId = 72,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2280),
                            CustomerCode = "11000106",
                            CustomerName = "บริษัท ลาซาด้า จำกัด",
                            Distributor = "AAI",
                            ShortName = "LAZADA"
                        },
                        new
                        {
                            CustomerId = 73,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(2280),
                            CustomerCode = "11000131",
                            CustomerName = "บริษัท เอสคอมเมิร์ซ (ประเทศไทย)จำกัด",
                            Distributor = "AAI",
                            ShortName = "S COMMERCE"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.BusinessParties.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("SupplierCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("SupplierName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier","dbo");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 431, DateTimeKind.Local).AddTicks(3150),
                            SupplierCode = "CS001",
                            SupplierName = "Team A"
                        },
                        new
                        {
                            SupplierId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 431, DateTimeKind.Local).AddTicks(3370),
                            SupplierCode = "CS002",
                            SupplierName = "Team B"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualLastYear")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<decimal?>("BudgetTargetInYear")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<int?>("BudgetTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<decimal>("BudgetValue")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("CenterName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 11);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("FundName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 13);

                    b.Property<decimal?>("PercentContribution")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<decimal?>("SaleInvesment")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<int?>("SourceFundId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 12);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("BudgetId");

                    b.HasIndex("BrandId");

                    b.HasIndex("BudgetTypeId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("SourceFundId");

                    b.ToTable("Budget","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.BudgetType", b =>
                {
                    b.Property<int>("BudgetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BudgetTypeCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("BudgetTypeDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("BudgetTypeName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("BudgetTypeId");

                    b.ToTable("BudgetType","dbo");

                    b.HasData(
                        new
                        {
                            BudgetTypeId = 1,
                            BudgetTypeCode = "BTI01",
                            BudgetTypeDesc = "Invesment Value",
                            BudgetTypeName = "Value"
                        },
                        new
                        {
                            BudgetTypeId = 2,
                            BudgetTypeCode = "BTI02",
                            BudgetTypeDesc = "Invesment of % Sales Growth",
                            BudgetTypeName = "% Sales Growth"
                        },
                        new
                        {
                            BudgetTypeId = 3,
                            BudgetTypeCode = "BTS01",
                            BudgetTypeDesc = "Sale of Value",
                            BudgetTypeName = "Value"
                        },
                        new
                        {
                            BudgetTypeId = 4,
                            BudgetTypeCode = "BTS02",
                            BudgetTypeDesc = "Sale of % Sales Growth",
                            BudgetTypeName = "% Sales Growth"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChannelCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 12);

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ChannelName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 13);

                    b.Property<string>("ClientCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("ClientName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 11);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("CurrentState")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 21);

                    b.Property<int>("CurrentStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 20);

                    b.Property<string>("CustomerCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 14);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 15);

                    b.Property<int?>("DocumentMonth")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("DocumentTypeCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<int?>("DocumentYear")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("NextState")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 23);

                    b.Property<int>("NextStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 22);

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<int>("Revision")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 19);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<decimal?>("TotalInvestment")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 17);

                    b.Property<decimal?>("TotalSale")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 16);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 18);

                    b.HasKey("DocumentId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Document","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.DocumentAction", b =>
                {
                    b.Property<int>("DocumentActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActorId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("ActorName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 5);

                    b.HasKey("DocumentActionId");

                    b.HasIndex("ActorId");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentAction","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("DocumentTypeCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("DocumentTypeDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("DocumentTypeName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.Property<int?>("WorkflowId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("DocumentTypeId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("DocumentType","dbo");

                    b.HasData(
                        new
                        {
                            DocumentTypeId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 408, DateTimeKind.Local).AddTicks(7880),
                            DocumentTypeCode = "FC01",
                            DocumentTypeDesc = "Fixed Contract",
                            DocumentTypeName = "Fixed Contract",
                            WorkflowId = 1
                        },
                        new
                        {
                            DocumentTypeId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 426, DateTimeKind.Local).AddTicks(7410),
                            DocumentTypeCode = "SF01",
                            DocumentTypeDesc = "Sale Forecast - Client",
                            DocumentTypeName = "Sale Forecast",
                            WorkflowId = 2
                        },
                        new
                        {
                            DocumentTypeId = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 426, DateTimeKind.Local).AddTicks(8120),
                            DocumentTypeCode = "SF02",
                            DocumentTypeDesc = "Sale Forecast - Brand",
                            DocumentTypeName = "Sale Forecast",
                            WorkflowId = 2
                        },
                        new
                        {
                            DocumentTypeId = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 426, DateTimeKind.Local).AddTicks(8180),
                            DocumentTypeCode = "SF03",
                            DocumentTypeDesc = "Sale Forecast - Product (SKU)",
                            DocumentTypeName = "Sale Forecast",
                            WorkflowId = 2
                        },
                        new
                        {
                            DocumentTypeId = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 426, DateTimeKind.Local).AddTicks(8190),
                            DocumentTypeCode = "BP01",
                            DocumentTypeDesc = "Budget Planing",
                            DocumentTypeName = "Budget Planing",
                            WorkflowId = 3
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.FixedContract", b =>
                {
                    b.Property<int>("FixedContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionType")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("ContractCategory")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("ContractDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("DateRefForm")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<decimal?>("M01JAN")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 51);

                    b.Property<decimal?>("M02FEB")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 52);

                    b.Property<decimal?>("M03MAR")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 53);

                    b.Property<decimal?>("M04APR")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 54);

                    b.Property<decimal?>("M05MAY")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 55);

                    b.Property<decimal?>("M06JUN")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 56);

                    b.Property<decimal?>("M07JUL")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 57);

                    b.Property<decimal?>("M08AUG")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 58);

                    b.Property<decimal?>("M09SEP")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 59);

                    b.Property<decimal?>("M10OCT")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 60);

                    b.Property<decimal?>("M11NOV")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 61);

                    b.Property<decimal?>("M12DEC")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 62);

                    b.Property<int?>("TradeInvesmentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("UOM")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("FixedContractId");

                    b.HasIndex("AccountId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("TradeInvesmentId");

                    b.ToTable("FixedContract","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.SaleForecast", b =>
                {
                    b.Property<int>("SaleForecastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("BrandName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ForecastType")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<decimal?>("M01JAN")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 51);

                    b.Property<decimal?>("M02FEB")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 52);

                    b.Property<decimal?>("M03MAR")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 53);

                    b.Property<decimal?>("M04APR")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 54);

                    b.Property<decimal?>("M05MAY")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 55);

                    b.Property<decimal?>("M06JUN")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 56);

                    b.Property<decimal?>("M07JUL")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 57);

                    b.Property<decimal?>("M08AUG")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 58);

                    b.Property<decimal?>("M09SEP")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 59);

                    b.Property<decimal?>("M10OCT")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 60);

                    b.Property<decimal?>("M11NOV")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 61);

                    b.Property<decimal?>("M12DEC")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 62);

                    b.Property<string>("ProductCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("SaleForecastId");

                    b.HasIndex("BrandId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ProductId");

                    b.ToTable("SaleForecast","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.EmailInbound", b =>
                {
                    b.Property<int>("EmailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email_id")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("DataPath")
                        .HasColumnName("data_path")
                        .HasColumnType("varchar(4000)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("FromEmail")
                        .HasColumnName("from_email")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("int")
                        .HasDefaultValueSql("0")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasColumnType("varchar(4000)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("EmailID");

                    b.ToTable("tb_email_inbound","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Organizations.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("Address")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("Code")
                        .HasColumnName("CompanyCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("Name")
                        .HasColumnName("CompanyName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("Id");

                    b.ToTable("Company","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Organizations.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnName("BranchCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("BranchName")
                        .HasColumnName("BranchName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("DepartmentCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnName("CompanyCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("Name")
                        .HasColumnName("DepartmentName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("Id");

                    b.HasAlternateKey("CompanyCode", "BranchCode", "Code");

                    b.HasIndex("CompanyId");

                    b.ToTable("Department","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Organizations.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("EmployeeCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<string>("FirstName")
                        .HasColumnName("FirstName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("Position")
                        .HasColumnName("Position")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("Prefix")
                        .HasColumnName("Prefix")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<decimal>("Salary")
                        .HasColumnName("Salary")
                        .HasColumnType("numeric(8,2)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.Channel", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChannelCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ChannelDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ChannelName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("ChannelId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Channel","dbo");

                    b.HasData(
                        new
                        {
                            ChannelId = 1,
                            ChannelCode = "MT",
                            ChannelDesc = "MT - Modern Trade",
                            ChannelName = "Modern Trade",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9960)
                        },
                        new
                        {
                            ChannelId = 2,
                            ChannelCode = "CN002",
                            ChannelDesc = "",
                            ChannelName = "VAN",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9970)
                        },
                        new
                        {
                            ChannelId = 3,
                            ChannelCode = "CN003",
                            ChannelDesc = "",
                            ChannelName = "Food Service",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9970)
                        },
                        new
                        {
                            ChannelId = 4,
                            ChannelCode = "CN004",
                            ChannelDesc = "",
                            ChannelName = "General Trade",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9970)
                        },
                        new
                        {
                            ChannelId = 5,
                            ChannelCode = "CN004",
                            ChannelDesc = "",
                            ChannelName = "General Trade",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9970)
                        },
                        new
                        {
                            ChannelId = 6,
                            ChannelCode = "CN004",
                            ChannelDesc = "",
                            ChannelName = "General Trade",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 433, DateTimeKind.Local).AddTicks(9970)
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.CustomerProduct", b =>
                {
                    b.Property<int>("CustomerProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("CustomerProductId");

                    b.HasAlternateKey("CustomerId", "ProductCategoryId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("CustomerProduct","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.SourceFund", b =>
                {
                    b.Property<int>("SourceFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FundCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("FundDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("FundName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("SourceFundId");

                    b.ToTable("SourceFund","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.SupplierCustomer", b =>
                {
                    b.Property<int>("SupplierCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<int>("IsActive")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("SupplierCustomerId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierCustomer","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.TradeActivity", b =>
                {
                    b.Property<int>("TradeActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("ActivityCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("ActivityName")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ActivityType")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("Deductable")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("FixedContract")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("NotRelateSaleAbsAmt")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 13);

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 15);

                    b.Property<string>("SaleInGrossSale")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("SaleInNotSale")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<string>("SaleInTHBCS")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("SaleOutGrossSale")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 11);

                    b.Property<string>("SaleOutNotSale")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 12);

                    b.Property<string>("SaleOutTHBCS")
                        .HasColumnType("varchar(1)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.Property<string>("Value")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 14);

                    b.HasKey("TradeActivityId");

                    b.HasIndex("AccountId");

                    b.ToTable("TradeActivity","dbo");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.TradeInvesment", b =>
                {
                    b.Property<int>("TradeInvesmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<string>("CostElement")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 11);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DataSource")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<bool>("Deductable")
                        .HasColumnType("bit")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<bool>("IsFixedContract")
                        .HasColumnType("bit")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("SubGroup")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ToleranceLevel")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<decimal?>("ToleranceLower")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<decimal?>("ToleranceUpper")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("TradeActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("TradeName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("TradeInvesmentId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("CustomerId");

                    b.ToTable("TradeInvesment","dbo");

                    b.HasData(
                        new
                        {
                            TradeInvesmentId = 1,
                            ChannelId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 434, DateTimeKind.Local).AddTicks(6630),
                            CustomerId = 1,
                            Deductable = false,
                            IsFixedContract = false,
                            TradeActivity = "Compensation",
                            TradeCode = "TINV001"
                        },
                        new
                        {
                            TradeInvesmentId = 2,
                            ChannelId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 434, DateTimeKind.Local).AddTicks(6640),
                            CustomerId = 1,
                            Deductable = false,
                            IsFixedContract = false,
                            TradeActivity = "Allowance",
                            TradeCode = "TINV002"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Warehouses.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("BrandName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.HasKey("BrandId");

                    b.ToTable("Brand","dbo");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandCode = "B001",
                            BrandName = "CocoMax",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 436, DateTimeKind.Local).AddTicks(2730)
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Warehouses.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("Color")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(8,2)")
                        .HasAnnotation("ColumnOrder", 12);

                    b.Property<decimal?>("LTP")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 17);

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ProductCategoryName")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("ProductCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<int?>("QTY")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 15);

                    b.Property<string>("SKU")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("Shape")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 13);

                    b.Property<string>("Size")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 14);

                    b.Property<string>("UOM")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 16);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(8,2)")
                        .HasAnnotation("ColumnOrder", 11);

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(8,2)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product","dbo");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9420),
                            ProductCategoryId = 1,
                            ProductCode = "P001",
                            ProductName = "Beer",
                            SKU = "Beer-Premuim-Can-250cc",
                            Size = "250cc",
                            UOM = "UOM"
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            ProductCategoryId = 1,
                            ProductCode = "P002",
                            ProductName = "Beer",
                            SKU = "Beer-Premuim-Can-500cc",
                            Size = "500cc",
                            UOM = "Can"
                        },
                        new
                        {
                            ProductId = 3,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            ProductCategoryId = 1,
                            ProductCode = "P003",
                            ProductName = "Beer",
                            SKU = "Beer-Premuim-Bottom-750ml",
                            Size = "750ml",
                            UOM = "Can"
                        },
                        new
                        {
                            ProductId = 4,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            Height = 3m,
                            ProductCategoryId = 1,
                            ProductCode = "P004",
                            ProductName = "Beer",
                            SKU = "Beer-Lager-4x3-Can Dozen-500cc",
                            Size = "500cc",
                            UOM = "Bottom",
                            Width = 4m
                        },
                        new
                        {
                            ProductId = 5,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            Height = 3m,
                            ProductCategoryId = 1,
                            ProductCode = "P005",
                            ProductName = "Beer",
                            SKU = "Beer-Lager-4x3-Bottom Dozen-750ml",
                            Size = "750ml",
                            UOM = "Can Dozen",
                            Width = 4m
                        },
                        new
                        {
                            ProductId = 6,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            ProductCategoryId = 1,
                            ProductCode = "P006",
                            ProductName = "Beer",
                            SKU = "Beer-Lager-Pack-750ml",
                            Size = "750ml",
                            UOM = "Bottom Dozen"
                        },
                        new
                        {
                            ProductId = 7,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9620),
                            ProductCategoryId = 1,
                            ProductCode = "P007",
                            ProductName = "Water",
                            SKU = "Water-RO-Bottom-600ml",
                            Size = "600ml",
                            UOM = "Pack"
                        },
                        new
                        {
                            ProductId = 8,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9630),
                            ProductCategoryId = 1,
                            ProductCode = "P008",
                            ProductName = "Water",
                            SKU = "Water-RO-Bottom-1000ml",
                            Size = "1000ml",
                            UOM = "Bottom"
                        },
                        new
                        {
                            ProductId = 9,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9630),
                            ProductCategoryId = 1,
                            ProductCode = "P009",
                            ProductName = "Water",
                            SKU = "Water-Mineral-Bottom-600ml",
                            Size = "600ml",
                            UOM = "Bottom"
                        },
                        new
                        {
                            ProductId = 10,
                            BrandId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 437, DateTimeKind.Local).AddTicks(9630),
                            ProductCategoryId = 1,
                            ProductCode = "P010",
                            ProductName = "Water",
                            SKU = "Water-Mineral-Bottom-1000ml",
                            Size = "1000ml",
                            UOM = "Bottom"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Warehouses.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductCategoryName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory","dbo");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            ProductCategoryName = "Beverage"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActorCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ActorEmail")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ActorName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("ActorId");

                    b.ToTable("Actor","dbo");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            ActorCode = "AC001",
                            ActorEmail = "administrator@localhost",
                            ActorName = "administrator@localhost"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.ActorState", b =>
                {
                    b.Property<int>("ActorStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("ContactType")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<decimal?>("LimitValue")
                        .HasColumnType("numeric(13,4)")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("OperatorCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<int>("OperatorConditionId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<string>("Position")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("RoleState")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("User")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("ActorStateId");

                    b.HasIndex("ActorId");

                    b.HasIndex("OperatorConditionId");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("ActorState","dbo");

                    b.HasData(
                        new
                        {
                            ActorStateId = 1,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 1
                        },
                        new
                        {
                            ActorStateId = 2,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 2
                        },
                        new
                        {
                            ActorStateId = 3,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 2
                        },
                        new
                        {
                            ActorStateId = 4,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 3
                        },
                        new
                        {
                            ActorStateId = 5,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 3
                        },
                        new
                        {
                            ActorStateId = 6,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 3
                        },
                        new
                        {
                            ActorStateId = 7,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 4
                        },
                        new
                        {
                            ActorStateId = 8,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 4
                        },
                        new
                        {
                            ActorStateId = 9,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 4
                        },
                        new
                        {
                            ActorStateId = 10,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 4
                        },
                        new
                        {
                            ActorStateId = 11,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 12,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 13,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 14,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 15,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "ACC",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 16,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 5
                        },
                        new
                        {
                            ActorStateId = 17,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 6
                        },
                        new
                        {
                            ActorStateId = 18,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 6
                        },
                        new
                        {
                            ActorStateId = 19,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 7
                        },
                        new
                        {
                            ActorStateId = 20,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 7
                        },
                        new
                        {
                            ActorStateId = 21,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 7
                        },
                        new
                        {
                            ActorStateId = 22,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 8
                        },
                        new
                        {
                            ActorStateId = 23,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 8
                        },
                        new
                        {
                            ActorStateId = 24,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 8
                        },
                        new
                        {
                            ActorStateId = 25,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 8
                        },
                        new
                        {
                            ActorStateId = 26,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 9
                        },
                        new
                        {
                            ActorStateId = 27,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 10
                        },
                        new
                        {
                            ActorStateId = 28,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 11
                        },
                        new
                        {
                            ActorStateId = 29,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 12
                        },
                        new
                        {
                            ActorStateId = 30,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 12
                        },
                        new
                        {
                            ActorStateId = 31,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 13
                        },
                        new
                        {
                            ActorStateId = 32,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 13
                        },
                        new
                        {
                            ActorStateId = 33,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 13
                        },
                        new
                        {
                            ActorStateId = 34,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 14
                        },
                        new
                        {
                            ActorStateId = 35,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 14
                        },
                        new
                        {
                            ActorStateId = 36,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 14
                        },
                        new
                        {
                            ActorStateId = 37,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 14
                        },
                        new
                        {
                            ActorStateId = 38,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 39,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 40,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 41,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 42,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "ACC",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 43,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 15
                        },
                        new
                        {
                            ActorStateId = 44,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 16
                        },
                        new
                        {
                            ActorStateId = 45,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 16
                        },
                        new
                        {
                            ActorStateId = 46,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 17
                        },
                        new
                        {
                            ActorStateId = 47,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 17
                        },
                        new
                        {
                            ActorStateId = 48,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 17
                        },
                        new
                        {
                            ActorStateId = 49,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 18
                        },
                        new
                        {
                            ActorStateId = 50,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 18
                        },
                        new
                        {
                            ActorStateId = 51,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 18
                        },
                        new
                        {
                            ActorStateId = 52,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 18
                        },
                        new
                        {
                            ActorStateId = 53,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 19
                        },
                        new
                        {
                            ActorStateId = 54,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 20
                        },
                        new
                        {
                            ActorStateId = 55,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 21
                        },
                        new
                        {
                            ActorStateId = 56,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            LimitValue = 50000m,
                            OperatorCode = "<=",
                            OperatorConditionId = 2,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 22
                        },
                        new
                        {
                            ActorStateId = 57,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 22
                        },
                        new
                        {
                            ActorStateId = 58,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            LimitValue = 100000m,
                            OperatorCode = "<=",
                            OperatorConditionId = 2,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 23
                        },
                        new
                        {
                            ActorStateId = 59,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 23
                        },
                        new
                        {
                            ActorStateId = 60,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            LimitValue = 500000m,
                            OperatorCode = "<=",
                            OperatorConditionId = 2,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 24
                        },
                        new
                        {
                            ActorStateId = 61,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 24
                        },
                        new
                        {
                            ActorStateId = 62,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            LimitValue = 1000000m,
                            OperatorCode = ">=",
                            OperatorConditionId = 2,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 25
                        },
                        new
                        {
                            ActorStateId = 63,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 25
                        },
                        new
                        {
                            ActorStateId = 64,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 26
                        },
                        new
                        {
                            ActorStateId = 65,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 26
                        },
                        new
                        {
                            ActorStateId = 66,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 26
                        },
                        new
                        {
                            ActorStateId = 67,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 27
                        },
                        new
                        {
                            ActorStateId = 68,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 27
                        },
                        new
                        {
                            ActorStateId = 69,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 27
                        },
                        new
                        {
                            ActorStateId = 70,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 28
                        },
                        new
                        {
                            ActorStateId = 71,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 28
                        },
                        new
                        {
                            ActorStateId = 72,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 28
                        },
                        new
                        {
                            ActorStateId = 73,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 29
                        },
                        new
                        {
                            ActorStateId = 74,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 29
                        },
                        new
                        {
                            ActorStateId = 75,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 29
                        },
                        new
                        {
                            ActorStateId = 76,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 30
                        },
                        new
                        {
                            ActorStateId = 77,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 30
                        },
                        new
                        {
                            ActorStateId = 78,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 30
                        },
                        new
                        {
                            ActorStateId = 79,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "SM",
                            RoleState = "SM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 31
                        },
                        new
                        {
                            ActorStateId = 80,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 31
                        },
                        new
                        {
                            ActorStateId = 81,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "DM",
                            RoleState = "DM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 32
                        },
                        new
                        {
                            ActorStateId = 82,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 32
                        },
                        new
                        {
                            ActorStateId = 83,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "GM",
                            RoleState = "GM",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 33
                        },
                        new
                        {
                            ActorStateId = 84,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 33
                        },
                        new
                        {
                            ActorStateId = 85,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 34
                        },
                        new
                        {
                            ActorStateId = 86,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 34
                        },
                        new
                        {
                            ActorStateId = 87,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 35
                        },
                        new
                        {
                            ActorStateId = 88,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 36
                        },
                        new
                        {
                            ActorStateId = 89,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 36
                        },
                        new
                        {
                            ActorStateId = 90,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 36
                        },
                        new
                        {
                            ActorStateId = 91,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 37
                        },
                        new
                        {
                            ActorStateId = 92,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 37
                        },
                        new
                        {
                            ActorStateId = 93,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 37
                        },
                        new
                        {
                            ActorStateId = 94,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 38
                        },
                        new
                        {
                            ActorStateId = 95,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 38
                        },
                        new
                        {
                            ActorStateId = 96,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 38
                        },
                        new
                        {
                            ActorStateId = 97,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 39
                        },
                        new
                        {
                            ActorStateId = 98,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 39
                        },
                        new
                        {
                            ActorStateId = 99,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 39
                        },
                        new
                        {
                            ActorStateId = 100,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Accountant",
                            RoleState = "Accountant",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 40
                        },
                        new
                        {
                            ActorStateId = 101,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "Sales",
                            RoleState = "Sales",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 40
                        },
                        new
                        {
                            ActorStateId = 102,
                            ActorId = 1,
                            ContactType = "EMAIL",
                            OperatorCode = "None",
                            OperatorConditionId = 7,
                            Position = "CEO",
                            RoleState = "CEO",
                            User = "panupong.k@itsmart.co.th",
                            WorkflowStateId = 40
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.FlowItem", b =>
                {
                    b.Property<int>("FlowItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowItemCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("FlowItemName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("FlowItemId");

                    b.ToTable("FlowItem","dbo");

                    b.HasData(
                        new
                        {
                            FlowItemId = 1,
                            FlowItemCode = "FI01",
                            FlowItemName = "Submit"
                        },
                        new
                        {
                            FlowItemId = 2,
                            FlowItemCode = "FI02",
                            FlowItemName = "Confirm"
                        },
                        new
                        {
                            FlowItemId = 3,
                            FlowItemCode = "FI03",
                            FlowItemName = "Cancel"
                        },
                        new
                        {
                            FlowItemId = 4,
                            FlowItemCode = "FI04",
                            FlowItemName = "Approve"
                        },
                        new
                        {
                            FlowItemId = 5,
                            FlowItemCode = "FI05",
                            FlowItemName = "Reject"
                        },
                        new
                        {
                            FlowItemId = 6,
                            FlowItemCode = "FI06",
                            FlowItemName = "Review"
                        },
                        new
                        {
                            FlowItemId = 7,
                            FlowItemCode = "FI07",
                            FlowItemName = "Commit"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.OperatorCondition", b =>
                {
                    b.Property<int>("OperatorConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OperatoDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("OperatorCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("OperatorConditionId");

                    b.ToTable("OperatorCondition","dbo");

                    b.HasData(
                        new
                        {
                            OperatorConditionId = 1,
                            OperatoDesc = "Less than ...",
                            OperatorCode = "<"
                        },
                        new
                        {
                            OperatorConditionId = 2,
                            OperatoDesc = "Less than or equal to ...",
                            OperatorCode = "<="
                        },
                        new
                        {
                            OperatorConditionId = 3,
                            OperatoDesc = "Greater than ...",
                            OperatorCode = ">"
                        },
                        new
                        {
                            OperatorConditionId = 4,
                            OperatoDesc = "Greater than or equal to ...",
                            OperatorCode = ">="
                        },
                        new
                        {
                            OperatorConditionId = 5,
                            OperatoDesc = "Equal to ...",
                            OperatorCode = "="
                        },
                        new
                        {
                            OperatorConditionId = 6,
                            OperatoDesc = "Not equal to ...",
                            OperatorCode = "!="
                        },
                        new
                        {
                            OperatorConditionId = 7,
                            OperatoDesc = "No have limit of approval",
                            OperatorCode = "None"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.StateFlowItem", b =>
                {
                    b.Property<int>("StateFlowItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowItemCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<int>("FlowItemId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("FlowItemName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("StateFlowItemId");

                    b.HasIndex("FlowItemId");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("StateFlowItem","dbo");

                    b.HasData(
                        new
                        {
                            StateFlowItemId = 1,
                            FlowItemCode = "FI01",
                            FlowItemId = 1,
                            FlowItemName = "Submit",
                            Sort = 1,
                            WorkflowStateId = 1
                        },
                        new
                        {
                            StateFlowItemId = 2,
                            FlowItemCode = "FI02",
                            FlowItemId = 3,
                            FlowItemName = "Confirm",
                            Sort = 2,
                            WorkflowStateId = 1
                        },
                        new
                        {
                            StateFlowItemId = 3,
                            FlowItemCode = "FI03",
                            FlowItemId = 4,
                            FlowItemName = "Cancel",
                            Sort = 3,
                            WorkflowStateId = 1
                        },
                        new
                        {
                            StateFlowItemId = 4,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 2
                        },
                        new
                        {
                            StateFlowItemId = 5,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 2
                        },
                        new
                        {
                            StateFlowItemId = 6,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateFlowItemId = 7,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateFlowItemId = 8,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateFlowItemId = 9,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateFlowItemId = 10,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateFlowItemId = 11,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateFlowItemId = 12,
                            FlowItemCode = "FI01",
                            FlowItemId = 1,
                            FlowItemName = "Submit",
                            Sort = 1,
                            WorkflowStateId = 11
                        },
                        new
                        {
                            StateFlowItemId = 13,
                            FlowItemCode = "FI02",
                            FlowItemId = 3,
                            FlowItemName = "Confirm",
                            Sort = 2,
                            WorkflowStateId = 11
                        },
                        new
                        {
                            StateFlowItemId = 14,
                            FlowItemCode = "FI03",
                            FlowItemId = 4,
                            FlowItemName = "Cancel",
                            Sort = 3,
                            WorkflowStateId = 11
                        },
                        new
                        {
                            StateFlowItemId = 15,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 12
                        },
                        new
                        {
                            StateFlowItemId = 16,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 12
                        },
                        new
                        {
                            StateFlowItemId = 17,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateFlowItemId = 18,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateFlowItemId = 19,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateFlowItemId = 20,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateFlowItemId = 21,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateFlowItemId = 22,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateFlowItemId = 23,
                            FlowItemCode = "FI01",
                            FlowItemId = 1,
                            FlowItemName = "Submit",
                            Sort = 1,
                            WorkflowStateId = 21
                        },
                        new
                        {
                            StateFlowItemId = 24,
                            FlowItemCode = "FI02",
                            FlowItemId = 3,
                            FlowItemName = "Confirm",
                            Sort = 2,
                            WorkflowStateId = 21
                        },
                        new
                        {
                            StateFlowItemId = 25,
                            FlowItemCode = "FI03",
                            FlowItemId = 4,
                            FlowItemName = "Cancel",
                            Sort = 3,
                            WorkflowStateId = 21
                        },
                        new
                        {
                            StateFlowItemId = 26,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 22
                        },
                        new
                        {
                            StateFlowItemId = 27,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 22
                        },
                        new
                        {
                            StateFlowItemId = 28,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateFlowItemId = 29,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateFlowItemId = 30,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateFlowItemId = 31,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateFlowItemId = 32,
                            FlowItemCode = "FI04",
                            FlowItemId = 4,
                            FlowItemName = "Approve",
                            Sort = 1,
                            WorkflowStateId = 25
                        },
                        new
                        {
                            StateFlowItemId = 33,
                            FlowItemCode = "FI05",
                            FlowItemId = 5,
                            FlowItemName = "Reject",
                            Sort = 2,
                            WorkflowStateId = 25
                        },
                        new
                        {
                            StateFlowItemId = 34,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 26
                        },
                        new
                        {
                            StateFlowItemId = 35,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 26
                        },
                        new
                        {
                            StateFlowItemId = 36,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 27
                        },
                        new
                        {
                            StateFlowItemId = 37,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 27
                        },
                        new
                        {
                            StateFlowItemId = 38,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 28
                        },
                        new
                        {
                            StateFlowItemId = 39,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 28
                        },
                        new
                        {
                            StateFlowItemId = 40,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 29
                        },
                        new
                        {
                            StateFlowItemId = 41,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 29
                        },
                        new
                        {
                            StateFlowItemId = 42,
                            FlowItemCode = "FI06",
                            FlowItemId = 6,
                            FlowItemName = "Review",
                            Sort = 1,
                            WorkflowStateId = 30
                        },
                        new
                        {
                            StateFlowItemId = 43,
                            FlowItemCode = "FI07",
                            FlowItemId = 7,
                            FlowItemName = "Commit",
                            Sort = 2,
                            WorkflowStateId = 30
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.StateProcess", b =>
                {
                    b.Property<int>("StateProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int>("ActionId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("ActionName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<int>("ActionPiority")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 10);

                    b.Property<string>("ActivityCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("ActivityName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<int>("ActivityPiority")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("StateProcessId");

                    b.HasIndex("ActionId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("StateProcess","dbo");

                    b.HasData(
                        new
                        {
                            StateProcessId = 1,
                            ActionCode = "ACT003",
                            ActionId = 1,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI001",
                            ActivityId = 1,
                            ActivityName = "Entry",
                            ActivityPiority = 1,
                            WorkflowStateId = 1
                        },
                        new
                        {
                            StateProcessId = 2,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 2
                        },
                        new
                        {
                            StateProcessId = 3,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 2
                        },
                        new
                        {
                            StateProcessId = 4,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 2
                        },
                        new
                        {
                            StateProcessId = 5,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateProcessId = 6,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateProcessId = 7,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateProcessId = 8,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 3
                        },
                        new
                        {
                            StateProcessId = 9,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateProcessId = 10,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateProcessId = 11,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateProcessId = 12,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateProcessId = 13,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 4
                        },
                        new
                        {
                            StateProcessId = 14,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 15,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 16,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 17,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 18,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 19,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 20,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 5
                        },
                        new
                        {
                            StateProcessId = 21,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 6
                        },
                        new
                        {
                            StateProcessId = 22,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 6
                        },
                        new
                        {
                            StateProcessId = 23,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 7
                        },
                        new
                        {
                            StateProcessId = 24,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 7
                        },
                        new
                        {
                            StateProcessId = 25,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 7
                        },
                        new
                        {
                            StateProcessId = 26,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 8
                        },
                        new
                        {
                            StateProcessId = 27,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 8
                        },
                        new
                        {
                            StateProcessId = 28,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 8
                        },
                        new
                        {
                            StateProcessId = 29,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 8
                        },
                        new
                        {
                            StateProcessId = 30,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 9
                        },
                        new
                        {
                            StateProcessId = 31,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 10
                        },
                        new
                        {
                            StateProcessId = 32,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI001",
                            ActivityId = 1,
                            ActivityName = "Entry",
                            ActivityPiority = 1,
                            WorkflowStateId = 11
                        },
                        new
                        {
                            StateProcessId = 33,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 12
                        },
                        new
                        {
                            StateProcessId = 34,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 12
                        },
                        new
                        {
                            StateProcessId = 35,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 12
                        },
                        new
                        {
                            StateProcessId = 36,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateProcessId = 37,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateProcessId = 38,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateProcessId = 39,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 13
                        },
                        new
                        {
                            StateProcessId = 40,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateProcessId = 41,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateProcessId = 42,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateProcessId = 43,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateProcessId = 44,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 14
                        },
                        new
                        {
                            StateProcessId = 45,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 46,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 47,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 48,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 49,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 50,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 51,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 15
                        },
                        new
                        {
                            StateProcessId = 52,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 16
                        },
                        new
                        {
                            StateProcessId = 53,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 16
                        },
                        new
                        {
                            StateProcessId = 54,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 17
                        },
                        new
                        {
                            StateProcessId = 55,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 17
                        },
                        new
                        {
                            StateProcessId = 56,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 17
                        },
                        new
                        {
                            StateProcessId = 57,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 18
                        },
                        new
                        {
                            StateProcessId = 58,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 18
                        },
                        new
                        {
                            StateProcessId = 59,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 18
                        },
                        new
                        {
                            StateProcessId = 60,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 18
                        },
                        new
                        {
                            StateProcessId = 61,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 19
                        },
                        new
                        {
                            StateProcessId = 62,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 20
                        },
                        new
                        {
                            StateProcessId = 63,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI001",
                            ActivityId = 1,
                            ActivityName = "Entry",
                            ActivityPiority = 1,
                            WorkflowStateId = 21
                        },
                        new
                        {
                            StateProcessId = 64,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 22
                        },
                        new
                        {
                            StateProcessId = 65,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 22
                        },
                        new
                        {
                            StateProcessId = 66,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 22
                        },
                        new
                        {
                            StateProcessId = 67,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateProcessId = 68,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateProcessId = 69,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateProcessId = 70,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 23
                        },
                        new
                        {
                            StateProcessId = 71,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateProcessId = 72,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateProcessId = 73,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateProcessId = 74,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateProcessId = 75,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 24
                        },
                        new
                        {
                            StateProcessId = 76,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 26
                        },
                        new
                        {
                            StateProcessId = 77,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 26
                        },
                        new
                        {
                            StateProcessId = 78,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 26
                        },
                        new
                        {
                            StateProcessId = 79,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 27
                        },
                        new
                        {
                            StateProcessId = 80,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 27
                        },
                        new
                        {
                            StateProcessId = 81,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 27
                        },
                        new
                        {
                            StateProcessId = 82,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 28
                        },
                        new
                        {
                            StateProcessId = 83,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 28
                        },
                        new
                        {
                            StateProcessId = 84,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 28
                        },
                        new
                        {
                            StateProcessId = 85,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 29
                        },
                        new
                        {
                            StateProcessId = 86,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 29
                        },
                        new
                        {
                            StateProcessId = 87,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 29
                        },
                        new
                        {
                            StateProcessId = 88,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 30
                        },
                        new
                        {
                            StateProcessId = 89,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 30
                        },
                        new
                        {
                            StateProcessId = 90,
                            ActionCode = "ACT003",
                            ActionId = 3,
                            ActionName = "Interaction",
                            ActionPiority = 3,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 30
                        },
                        new
                        {
                            StateProcessId = 91,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 31
                        },
                        new
                        {
                            StateProcessId = 92,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 31
                        },
                        new
                        {
                            StateProcessId = 93,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 32
                        },
                        new
                        {
                            StateProcessId = 94,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 32
                        },
                        new
                        {
                            StateProcessId = 95,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 32
                        },
                        new
                        {
                            StateProcessId = 96,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 33
                        },
                        new
                        {
                            StateProcessId = 97,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 33
                        },
                        new
                        {
                            StateProcessId = 98,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 33
                        },
                        new
                        {
                            StateProcessId = 99,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 33
                        },
                        new
                        {
                            StateProcessId = 100,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 35
                        },
                        new
                        {
                            StateProcessId = 101,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 36
                        },
                        new
                        {
                            StateProcessId = 102,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 36
                        },
                        new
                        {
                            StateProcessId = 103,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 36
                        },
                        new
                        {
                            StateProcessId = 104,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 37
                        },
                        new
                        {
                            StateProcessId = 105,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 37
                        },
                        new
                        {
                            StateProcessId = 106,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 37
                        },
                        new
                        {
                            StateProcessId = 107,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 38
                        },
                        new
                        {
                            StateProcessId = 108,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 38
                        },
                        new
                        {
                            StateProcessId = 109,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 38
                        },
                        new
                        {
                            StateProcessId = 110,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 39
                        },
                        new
                        {
                            StateProcessId = 111,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 39
                        },
                        new
                        {
                            StateProcessId = 112,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 39
                        },
                        new
                        {
                            StateProcessId = 113,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 40
                        },
                        new
                        {
                            StateProcessId = 114,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 40
                        },
                        new
                        {
                            StateProcessId = 115,
                            ActionCode = "ACT001",
                            ActionId = 1,
                            ActionName = "Behavior",
                            ActionPiority = 1,
                            ActivityCode = "ATI002",
                            ActivityId = 1,
                            ActivityName = "Do",
                            ActivityPiority = 2,
                            WorkflowStateId = 40
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.Workflow", b =>
                {
                    b.Property<int>("WorkflowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 101);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("ColumnOrder", 102);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 103);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("ColumnOrder", 104);

                    b.Property<string>("WorkflowDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<string>("WorkflowName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.HasKey("WorkflowId");

                    b.ToTable("Workflow","dbo");

                    b.HasData(
                        new
                        {
                            WorkflowId = 1,
                            BeginDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(1810),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(6560),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            WorkflowName = "Fixed Contract workflow"
                        },
                        new
                        {
                            WorkflowId = 2,
                            BeginDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(6060),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(6570),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            WorkflowName = "Sale Forecast workflow"
                        },
                        new
                        {
                            WorkflowId = 3,
                            BeginDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(6490),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 5, 24, 13, 30, 40, 450, DateTimeKind.Local).AddTicks(6570),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            WorkflowName = "Budget Planing workflow"
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.WorkflowAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ActionName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int>("ActionPiority")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.HasKey("ActionId");

                    b.ToTable("WorkflowAction","dbo");

                    b.HasData(
                        new
                        {
                            ActionId = 1,
                            ActionCode = "ACT001",
                            ActionName = "Behavior",
                            ActionPiority = 1
                        },
                        new
                        {
                            ActionId = 2,
                            ActionCode = "ACT002",
                            ActionName = "Activity",
                            ActionPiority = 2
                        },
                        new
                        {
                            ActionId = 3,
                            ActionCode = "ACT003",
                            ActionName = "Interaction",
                            ActionPiority = 3
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.WorkflowActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityCode")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("ActivityName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 3);

                    b.Property<int>("ActivityPiority")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 4);

                    b.HasKey("ActivityId");

                    b.ToTable("WorkflowActivity","dbo");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            ActivityCode = "ATI001",
                            ActivityName = "Entry",
                            ActivityPiority = 1
                        },
                        new
                        {
                            ActivityId = 2,
                            ActivityCode = "ATI002",
                            ActivityName = "Do",
                            ActivityPiority = 2
                        },
                        new
                        {
                            ActivityId = 3,
                            ActivityCode = "ATI003",
                            ActivityName = "Exit",
                            ActivityPiority = 3
                        });
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.WorkflowState", b =>
                {
                    b.Property<int>("WorkflowStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 1)
                        .HasAnnotation("SqlServer:Identity", "1, 1")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasAnnotation("ColumnOrder", 8);

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("cast('9999-12-31T11:59:59' as datetime)")
                        .HasAnnotation("ColumnOrder", 9);

                    b.Property<string>("NotifyMessage")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 7);

                    b.Property<string>("NotifySubject")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("ColumnOrder", 6);

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 2);

                    b.Property<string>("StateDesc")
                        .HasColumnType("varchar(max)")
                        .HasAnnotation("ColumnOrder", 5);

                    b.Property<string>("StateName")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("ColumnOrder", 4);

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int")
                        .HasAnnotation("ColumnOrder", 3);

                    b.HasKey("WorkflowStateId");

                    b.HasIndex("PreviousStateId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowState","dbo");

                    b.HasData(
                        new
                        {
                            WorkflowStateId = 1,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "Draft",
                            NotifySubject = "{DocNo} : Draft",
                            StateName = "DRAFT",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 2,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "SM. Approval",
                            NotifySubject = "{DocNo} : Approval",
                            PreviousStateId = 1,
                            StateName = "SM. Approval",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 3,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "DM. Approval",
                            NotifySubject = "{DocNo} : Approval",
                            PreviousStateId = 2,
                            StateName = "DM. Approval",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 4,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "GM. Approval",
                            NotifySubject = "{DocNo} : Approval",
                            PreviousStateId = 3,
                            StateName = "GM. Approval",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 5,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "ACC. Review",
                            NotifySubject = "{DocNo} : Review",
                            PreviousStateId = 4,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 6,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "SM. Rejected",
                            NotifySubject = "{DocNo} : Rejected",
                            PreviousStateId = 2,
                            StateName = "SM. Rejected",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 7,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "DM. Rejected",
                            NotifySubject = "{DocNo} : Rejected",
                            PreviousStateId = 3,
                            StateName = "DM. Rejected",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 8,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "GM. Rejected",
                            NotifySubject = "{DocNo} : Rejected",
                            PreviousStateId = 4,
                            StateName = "GM. Rejected",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 9,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "Cancelled",
                            NotifySubject = "{DocNo} : Cancelled",
                            PreviousStateId = 1,
                            StateName = "Cancelled",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 10,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "Completed",
                            NotifySubject = "{DocNo} : Completed",
                            PreviousStateId = 6,
                            StateName = "Completed",
                            WorkflowId = 1
                        },
                        new
                        {
                            WorkflowStateId = 11,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            StateName = "DRAFT",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 12,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 12,
                            StateName = "SM. Approval",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 13,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 13,
                            StateName = "DM. Approval",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 14,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 14,
                            StateName = "GM. Approval",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 15,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 15,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 16,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 13,
                            StateName = "SM. Rejected",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 17,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 14,
                            StateName = "DM. Rejected",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 18,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 15,
                            StateName = "GM. Rejected",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 19,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 12,
                            StateName = "Cancelled",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 20,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 16,
                            StateName = "Completed",
                            WorkflowId = 2
                        },
                        new
                        {
                            WorkflowStateId = 21,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            StateName = "DRAFT",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 22,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "SM. Approval",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 23,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "DM. Approval",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 24,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "GM. Approval",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 25,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "CEO. Approval",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 26,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 27,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 22,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 28,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 23,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 29,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 24,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 30,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 25,
                            StateName = "Accountant Reviewer",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 31,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 22,
                            StateName = "SM. Rejected",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 32,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 23,
                            StateName = "DM. Rejected",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 33,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 24,
                            StateName = "GM. Rejected",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 34,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 25,
                            StateName = "CEO. Rejected",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 35,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 21,
                            StateName = "Cancelled",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 36,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 26,
                            StateName = "Completed",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 37,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 27,
                            StateName = "Completed",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 38,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 28,
                            StateName = "Completed",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 39,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 29,
                            StateName = "Completed",
                            WorkflowId = 3
                        },
                        new
                        {
                            WorkflowStateId = 40,
                            BeginDate = new DateTime(2021, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            NotifyMessage = "",
                            NotifySubject = "",
                            PreviousStateId = 30,
                            StateName = "Completed",
                            WorkflowId = 3
                        });
                });

            modelBuilder.Entity("GFCA.Infrastructure.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GFCA.Infrastructure.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Accountants.CostCenter", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Organizations.Company", "Company")
                        .WithMany("CostCenters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Sales.SourceFund", "SourceFund")
                        .WithMany("CostCenters")
                        .HasForeignKey("SourceFundId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Accountants.GLAccount", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Accountants.GLGroup", "GLGroup")
                        .WithMany("GLAccounts")
                        .HasForeignKey("GLGroupId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.Budget", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Warehouses.Brand", "Brand")
                        .WithMany("Budgets")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Documents.BudgetType", "BudgetType")
                        .WithMany("Budgets")
                        .HasForeignKey("BudgetTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Accountants.CostCenter", "CostCenter")
                        .WithMany("Budgets")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Documents.Document", "Document")
                        .WithMany("Budgets")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Sales.SourceFund", "SourceFund")
                        .WithMany("Budgets")
                        .HasForeignKey("SourceFundId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.Document", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Sales.Channel", "Channel")
                        .WithMany("Documents")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Customer", "Customer")
                        .WithMany("Documents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Documents.DocumentType", "DocumentType")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Supplier", "Supplier")
                        .WithMany("Documents")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.DocumentAction", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.Actor", "Actor")
                        .WithMany("DocumentActions")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Documents.Document", "Document")
                        .WithMany("DocumentActions")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.DocumentType", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.Workflow", "Workflow")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.FixedContract", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Accountants.GLAccount", "GLAccount")
                        .WithMany("FixedContracts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Warehouses.Brand", "Brand")
                        .WithMany("FixedContracts")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Accountants.CostCenter", "CostCenter")
                        .WithMany("FixedContracts")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Documents.Document", "Document")
                        .WithMany("FixedContracts")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Sales.TradeInvesment", "TradeInvesment")
                        .WithMany("FixedContracts")
                        .HasForeignKey("TradeInvesmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Documents.SaleForecast", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Warehouses.Brand", "Brand")
                        .WithMany("SaleForecasts")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Documents.Document", "Document")
                        .WithMany("SaleForecasts")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Warehouses.Product", "Product")
                        .WithMany("SaleForecasts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Organizations.Department", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Organizations.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Organizations.Employee", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Organizations.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.Channel", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Customer", null)
                        .WithMany("Channels")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.CustomerProduct", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Customer", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Warehouses.ProductCategory", "ProductCategory")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.SupplierCustomer", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Warehouses.Brand", "Brand")
                        .WithMany("SupplierCustomers")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Sales.Channel", "Channel")
                        .WithMany("SupplierCustomers")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Customer", "Customer")
                        .WithMany("SupplierCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Supplier", "Supplier")
                        .WithMany("SupplierCustomers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.TradeActivity", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Accountants.GLAccount", "GLAccount")
                        .WithMany("TradeActivities")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Sales.TradeInvesment", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Accountants.GLAccount", "GLAccount")
                        .WithMany("TradeInvesments")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Sales.Channel", "Channel")
                        .WithMany("TradeInvesments")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.BusinessParties.Customer", "Customer")
                        .WithMany("TradeInvesments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Warehouses.Product", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Warehouses.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Warehouses.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.ActorState", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.Actor", "Actor")
                        .WithMany("ActorStates")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Workflows.OperatorCondition", "OperatorCondition")
                        .WithMany("ActorStates")
                        .HasForeignKey("OperatorConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowState", "WorkflowState")
                        .WithMany("ActorStates")
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.StateFlowItem", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.FlowItem", "FlowItem")
                        .WithMany("StateFlowItems")
                        .HasForeignKey("FlowItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowState", "WorkflowState")
                        .WithMany("StateFlowItems")
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.StateProcess", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowAction", "WorkflowAction")
                        .WithMany("StateProcesses")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowActivity", "WorkflowActivity")
                        .WithMany("StateProcesses")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowState", "WorkflowState")
                        .WithMany("StateProcesses")
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GFCA.Domain.Entities.Workflows.WorkflowState", b =>
                {
                    b.HasOne("GFCA.Domain.Entities.Workflows.WorkflowState", "PreviousState")
                        .WithMany("NextState")
                        .HasForeignKey("PreviousStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GFCA.Domain.Entities.Workflows.Workflow", "Workflow")
                        .WithMany("WorkflowStates")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("GFCA.Infrastructure.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("GFCA.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("GFCA.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("GFCA.Infrastructure.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GFCA.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("GFCA.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
